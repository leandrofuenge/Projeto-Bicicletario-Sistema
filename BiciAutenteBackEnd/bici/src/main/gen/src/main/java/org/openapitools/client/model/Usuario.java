/*
 * API de Usuário de Bicicletas
 * Esta API permite operações relacionadas aos usuários de bicicletas
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Usuario
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-28T21:46:49.866546800-04:00[America/Cuiaba]")
public class Usuario {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NOME_COMPLETO = "nomeCompleto";
  @SerializedName(SERIALIZED_NAME_NOME_COMPLETO)
  private String nomeCompleto;

  public static final String SERIALIZED_NAME_CREDITOS_RESTANTES = "creditosRestantes";
  @SerializedName(SERIALIZED_NAME_CREDITOS_RESTANTES)
  private Integer creditosRestantes;

  public static final String SERIALIZED_NAME_CPF = "cpf";
  @SerializedName(SERIALIZED_NAME_CPF)
  private String cpf;

  public static final String SERIALIZED_NAME_RG = "rg";
  @SerializedName(SERIALIZED_NAME_RG)
  private String rg;

  public static final String SERIALIZED_NAME_DATA_DE_NASCIMENTO = "dataDeNascimento";
  @SerializedName(SERIALIZED_NAME_DATA_DE_NASCIMENTO)
  private String dataDeNascimento;

  public static final String SERIALIZED_NAME_SEXO = "sexo";
  @SerializedName(SERIALIZED_NAME_SEXO)
  private String sexo;

  public static final String SERIALIZED_NAME_CEP = "cep";
  @SerializedName(SERIALIZED_NAME_CEP)
  private String cep;

  public static final String SERIALIZED_NAME_ENDERECO = "endereco";
  @SerializedName(SERIALIZED_NAME_ENDERECO)
  private String endereco;

  public static final String SERIALIZED_NAME_NUMERO = "numero";
  @SerializedName(SERIALIZED_NAME_NUMERO)
  private String numero;

  public static final String SERIALIZED_NAME_BAIRRO = "bairro";
  @SerializedName(SERIALIZED_NAME_BAIRRO)
  private String bairro;

  public static final String SERIALIZED_NAME_CIDADE = "cidade";
  @SerializedName(SERIALIZED_NAME_CIDADE)
  private String cidade;

  public static final String SERIALIZED_NAME_ESTADO = "estado";
  @SerializedName(SERIALIZED_NAME_ESTADO)
  private String estado;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_NUMERO_DE_SERIE_BICICLETA = "numeroDeSerieBicicleta";
  @SerializedName(SERIALIZED_NAME_NUMERO_DE_SERIE_BICICLETA)
  private String numeroDeSerieBicicleta;

  public static final String SERIALIZED_NAME_COR_DA_BICICLETA = "corDaBicicleta";
  @SerializedName(SERIALIZED_NAME_COR_DA_BICICLETA)
  private String corDaBicicleta;

  public static final String SERIALIZED_NAME_SENHA = "senha";
  @SerializedName(SERIALIZED_NAME_SENHA)
  private String senha;

  public static final String SERIALIZED_NAME_CELULAR = "celular";
  @SerializedName(SERIALIZED_NAME_CELULAR)
  private String celular;

  public Usuario() {
  }

  public Usuario id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Usuario nomeCompleto(String nomeCompleto) {
    
    this.nomeCompleto = nomeCompleto;
    return this;
  }

   /**
   * Get nomeCompleto
   * @return nomeCompleto
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNomeCompleto() {
    return nomeCompleto;
  }


  public void setNomeCompleto(String nomeCompleto) {
    this.nomeCompleto = nomeCompleto;
  }


  public Usuario creditosRestantes(Integer creditosRestantes) {
    
    this.creditosRestantes = creditosRestantes;
    return this;
  }

   /**
   * Get creditosRestantes
   * @return creditosRestantes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreditosRestantes() {
    return creditosRestantes;
  }


  public void setCreditosRestantes(Integer creditosRestantes) {
    this.creditosRestantes = creditosRestantes;
  }


  public Usuario cpf(String cpf) {
    
    this.cpf = cpf;
    return this;
  }

   /**
   * Get cpf
   * @return cpf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCpf() {
    return cpf;
  }


  public void setCpf(String cpf) {
    this.cpf = cpf;
  }


  public Usuario rg(String rg) {
    
    this.rg = rg;
    return this;
  }

   /**
   * Get rg
   * @return rg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRg() {
    return rg;
  }


  public void setRg(String rg) {
    this.rg = rg;
  }


  public Usuario dataDeNascimento(String dataDeNascimento) {
    
    this.dataDeNascimento = dataDeNascimento;
    return this;
  }

   /**
   * Get dataDeNascimento
   * @return dataDeNascimento
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataDeNascimento() {
    return dataDeNascimento;
  }


  public void setDataDeNascimento(String dataDeNascimento) {
    this.dataDeNascimento = dataDeNascimento;
  }


  public Usuario sexo(String sexo) {
    
    this.sexo = sexo;
    return this;
  }

   /**
   * Get sexo
   * @return sexo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSexo() {
    return sexo;
  }


  public void setSexo(String sexo) {
    this.sexo = sexo;
  }


  public Usuario cep(String cep) {
    
    this.cep = cep;
    return this;
  }

   /**
   * Get cep
   * @return cep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCep() {
    return cep;
  }


  public void setCep(String cep) {
    this.cep = cep;
  }


  public Usuario endereco(String endereco) {
    
    this.endereco = endereco;
    return this;
  }

   /**
   * Get endereco
   * @return endereco
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEndereco() {
    return endereco;
  }


  public void setEndereco(String endereco) {
    this.endereco = endereco;
  }


  public Usuario numero(String numero) {
    
    this.numero = numero;
    return this;
  }

   /**
   * Get numero
   * @return numero
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNumero() {
    return numero;
  }


  public void setNumero(String numero) {
    this.numero = numero;
  }


  public Usuario bairro(String bairro) {
    
    this.bairro = bairro;
    return this;
  }

   /**
   * Get bairro
   * @return bairro
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBairro() {
    return bairro;
  }


  public void setBairro(String bairro) {
    this.bairro = bairro;
  }


  public Usuario cidade(String cidade) {
    
    this.cidade = cidade;
    return this;
  }

   /**
   * Get cidade
   * @return cidade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCidade() {
    return cidade;
  }


  public void setCidade(String cidade) {
    this.cidade = cidade;
  }


  public Usuario estado(String estado) {
    
    this.estado = estado;
    return this;
  }

   /**
   * Get estado
   * @return estado
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEstado() {
    return estado;
  }


  public void setEstado(String estado) {
    this.estado = estado;
  }


  public Usuario email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public Usuario numeroDeSerieBicicleta(String numeroDeSerieBicicleta) {
    
    this.numeroDeSerieBicicleta = numeroDeSerieBicicleta;
    return this;
  }

   /**
   * Get numeroDeSerieBicicleta
   * @return numeroDeSerieBicicleta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNumeroDeSerieBicicleta() {
    return numeroDeSerieBicicleta;
  }


  public void setNumeroDeSerieBicicleta(String numeroDeSerieBicicleta) {
    this.numeroDeSerieBicicleta = numeroDeSerieBicicleta;
  }


  public Usuario corDaBicicleta(String corDaBicicleta) {
    
    this.corDaBicicleta = corDaBicicleta;
    return this;
  }

   /**
   * Get corDaBicicleta
   * @return corDaBicicleta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCorDaBicicleta() {
    return corDaBicicleta;
  }


  public void setCorDaBicicleta(String corDaBicicleta) {
    this.corDaBicicleta = corDaBicicleta;
  }


  public Usuario senha(String senha) {
    
    this.senha = senha;
    return this;
  }

   /**
   * Get senha
   * @return senha
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSenha() {
    return senha;
  }


  public void setSenha(String senha) {
    this.senha = senha;
  }


  public Usuario celular(String celular) {
    
    this.celular = celular;
    return this;
  }

   /**
   * Get celular
   * @return celular
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCelular() {
    return celular;
  }


  public void setCelular(String celular) {
    this.celular = celular;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Usuario usuario = (Usuario) o;
    return Objects.equals(this.id, usuario.id) &&
        Objects.equals(this.nomeCompleto, usuario.nomeCompleto) &&
        Objects.equals(this.creditosRestantes, usuario.creditosRestantes) &&
        Objects.equals(this.cpf, usuario.cpf) &&
        Objects.equals(this.rg, usuario.rg) &&
        Objects.equals(this.dataDeNascimento, usuario.dataDeNascimento) &&
        Objects.equals(this.sexo, usuario.sexo) &&
        Objects.equals(this.cep, usuario.cep) &&
        Objects.equals(this.endereco, usuario.endereco) &&
        Objects.equals(this.numero, usuario.numero) &&
        Objects.equals(this.bairro, usuario.bairro) &&
        Objects.equals(this.cidade, usuario.cidade) &&
        Objects.equals(this.estado, usuario.estado) &&
        Objects.equals(this.email, usuario.email) &&
        Objects.equals(this.numeroDeSerieBicicleta, usuario.numeroDeSerieBicicleta) &&
        Objects.equals(this.corDaBicicleta, usuario.corDaBicicleta) &&
        Objects.equals(this.senha, usuario.senha) &&
        Objects.equals(this.celular, usuario.celular);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, nomeCompleto, creditosRestantes, cpf, rg, dataDeNascimento, sexo, cep, endereco, numero, bairro, cidade, estado, email, numeroDeSerieBicicleta, corDaBicicleta, senha, celular);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Usuario {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    nomeCompleto: ").append(toIndentedString(nomeCompleto)).append("\n");
    sb.append("    creditosRestantes: ").append(toIndentedString(creditosRestantes)).append("\n");
    sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
    sb.append("    rg: ").append(toIndentedString(rg)).append("\n");
    sb.append("    dataDeNascimento: ").append(toIndentedString(dataDeNascimento)).append("\n");
    sb.append("    sexo: ").append(toIndentedString(sexo)).append("\n");
    sb.append("    cep: ").append(toIndentedString(cep)).append("\n");
    sb.append("    endereco: ").append(toIndentedString(endereco)).append("\n");
    sb.append("    numero: ").append(toIndentedString(numero)).append("\n");
    sb.append("    bairro: ").append(toIndentedString(bairro)).append("\n");
    sb.append("    cidade: ").append(toIndentedString(cidade)).append("\n");
    sb.append("    estado: ").append(toIndentedString(estado)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    numeroDeSerieBicicleta: ").append(toIndentedString(numeroDeSerieBicicleta)).append("\n");
    sb.append("    corDaBicicleta: ").append(toIndentedString(corDaBicicleta)).append("\n");
    sb.append("    senha: ").append(toIndentedString(senha)).append("\n");
    sb.append("    celular: ").append(toIndentedString(celular)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("nomeCompleto");
    openapiFields.add("creditosRestantes");
    openapiFields.add("cpf");
    openapiFields.add("rg");
    openapiFields.add("dataDeNascimento");
    openapiFields.add("sexo");
    openapiFields.add("cep");
    openapiFields.add("endereco");
    openapiFields.add("numero");
    openapiFields.add("bairro");
    openapiFields.add("cidade");
    openapiFields.add("estado");
    openapiFields.add("email");
    openapiFields.add("numeroDeSerieBicicleta");
    openapiFields.add("corDaBicicleta");
    openapiFields.add("senha");
    openapiFields.add("celular");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Usuario
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Usuario.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Usuario is not found in the empty JSON string", Usuario.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Usuario.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Usuario` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("nomeCompleto") != null && !jsonObj.get("nomeCompleto").isJsonNull()) && !jsonObj.get("nomeCompleto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nomeCompleto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nomeCompleto").toString()));
      }
      if ((jsonObj.get("cpf") != null && !jsonObj.get("cpf").isJsonNull()) && !jsonObj.get("cpf").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cpf` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cpf").toString()));
      }
      if ((jsonObj.get("rg") != null && !jsonObj.get("rg").isJsonNull()) && !jsonObj.get("rg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rg").toString()));
      }
      if ((jsonObj.get("dataDeNascimento") != null && !jsonObj.get("dataDeNascimento").isJsonNull()) && !jsonObj.get("dataDeNascimento").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataDeNascimento` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataDeNascimento").toString()));
      }
      if ((jsonObj.get("sexo") != null && !jsonObj.get("sexo").isJsonNull()) && !jsonObj.get("sexo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sexo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sexo").toString()));
      }
      if ((jsonObj.get("cep") != null && !jsonObj.get("cep").isJsonNull()) && !jsonObj.get("cep").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cep` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cep").toString()));
      }
      if ((jsonObj.get("endereco") != null && !jsonObj.get("endereco").isJsonNull()) && !jsonObj.get("endereco").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endereco` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endereco").toString()));
      }
      if ((jsonObj.get("numero") != null && !jsonObj.get("numero").isJsonNull()) && !jsonObj.get("numero").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numero` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numero").toString()));
      }
      if ((jsonObj.get("bairro") != null && !jsonObj.get("bairro").isJsonNull()) && !jsonObj.get("bairro").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bairro` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bairro").toString()));
      }
      if ((jsonObj.get("cidade") != null && !jsonObj.get("cidade").isJsonNull()) && !jsonObj.get("cidade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cidade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cidade").toString()));
      }
      if ((jsonObj.get("estado") != null && !jsonObj.get("estado").isJsonNull()) && !jsonObj.get("estado").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estado` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estado").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("numeroDeSerieBicicleta") != null && !jsonObj.get("numeroDeSerieBicicleta").isJsonNull()) && !jsonObj.get("numeroDeSerieBicicleta").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numeroDeSerieBicicleta` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numeroDeSerieBicicleta").toString()));
      }
      if ((jsonObj.get("corDaBicicleta") != null && !jsonObj.get("corDaBicicleta").isJsonNull()) && !jsonObj.get("corDaBicicleta").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `corDaBicicleta` to be a primitive type in the JSON string but got `%s`", jsonObj.get("corDaBicicleta").toString()));
      }
      if ((jsonObj.get("senha") != null && !jsonObj.get("senha").isJsonNull()) && !jsonObj.get("senha").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senha` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senha").toString()));
      }
      if ((jsonObj.get("celular") != null && !jsonObj.get("celular").isJsonNull()) && !jsonObj.get("celular").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `celular` to be a primitive type in the JSON string but got `%s`", jsonObj.get("celular").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Usuario.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Usuario' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Usuario> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Usuario.class));

       return (TypeAdapter<T>) new TypeAdapter<Usuario>() {
           @Override
           public void write(JsonWriter out, Usuario value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Usuario read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Usuario given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Usuario
  * @throws IOException if the JSON string is invalid with respect to Usuario
  */
  public static Usuario fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Usuario.class);
  }

 /**
  * Convert an instance of Usuario to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

